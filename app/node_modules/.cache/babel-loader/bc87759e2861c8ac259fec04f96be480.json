{"ast":null,"code":"import _classCallCheck from\"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/usr/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var MultiChoice=/*#__PURE__*/function(_Component){_inherits(MultiChoice,_Component);var _super=_createSuper(MultiChoice);function MultiChoice(props){var _this;_classCallCheck(this,MultiChoice);_this=_super.call(this,props);_this.state={error:\"displayNone\"};_this.onValueChange=function(event){_this.setState({selectedOption:event.target.value});};_this.formSubmit=function(event){event.preventDefault();if(_this.state.selectedOption===undefined){_this.setState({error:\"red\"});}else{_this.props.addState(_this.props.questionNum,_this.state.selectedOption);_this.setState({selectedOption:undefined});//otherwise next question may have selectedOption of previous question\n_this.setState({error:\"displayNone\"});//so next page doesnt have error message if first page did\n_this.props.changePage(_this.props.currentPage+1);}};_this.goBack=function(){_this.setState({selectedOption:undefined});//if you select option then go back the previous question would have current questions selectedOption\n_this.props.changePage(_this.props.currentPage-1);};return _this;}_createClass(MultiChoice,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"homeBackground white-bg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"questionNumber\",children:/*#__PURE__*/_jsxs(\"h1\",{className:\"questionNumberText appleFont\",children:[\"Question \",this.props.questionNum,\" of \",this.props.numQuestions]})}),/*#__PURE__*/_jsx(\"p\",{className:\"marginLR\",children:this.props.question}),/*#__PURE__*/_jsxs(\"form\",{className:\"marginLR\",onSubmit:this.formSubmit,children:[this.props.options.map(function(option){return/*#__PURE__*/_jsxs(\"div\",{className:\"radioContainer\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"check\",type:\"radio\",value:option,checked:_this2.state.selectedOption===option,onChange:_this2.onValueChange}),/*#__PURE__*/_jsx(\"span\",{className:\"checkMark\",children:option})]});}),/*#__PURE__*/_jsx(\"p\",{className:this.state.error,children:\"You need to select an option\"}),/*#__PURE__*/_jsx(\"input\",{className:\"questionnaireButton questionnaireNext appleFont\",type:\"submit\",value:\"Next\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:this.goBack,className:this.props.questionNum===1?\"displayNone\":\"questionnaireButton questionnaireBack appleFont\",children:\"Back\"})]})});}}]);return MultiChoice;}(Component);export default MultiChoice;","map":{"version":3,"sources":["/usr/src/app/src/components/MultiChoice.jsx"],"names":["React","Component","MultiChoice","props","state","error","onValueChange","event","setState","selectedOption","target","value","formSubmit","preventDefault","undefined","addState","questionNum","changePage","currentPage","goBack","numQuestions","question","options","map","option"],"mappings":"4fAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEMC,CAAAA,W,0GAKJ,qBAAYC,KAAZ,CAAmB,6CACjB,uBAAMA,KAAN,EADiB,MAJnBC,KAImB,CAJX,CACNC,KAAK,CAAE,aADD,CAIW,OAInBC,aAJmB,CAIH,SAAAC,KAAK,CAAI,CACvB,MAAKC,QAAL,CAAc,CACZC,cAAc,CAAEF,KAAK,CAACG,MAAN,CAAaC,KADjB,CAAd,EAGD,CARkB,OAUnBC,UAVmB,CAUN,SAAAL,KAAK,CAAI,CACpBA,KAAK,CAACM,cAAN,GACA,GAAI,MAAKT,KAAL,CAAWK,cAAX,GAA8BK,SAAlC,CAA6C,CAC3C,MAAKN,QAAL,CAAc,CAAEH,KAAK,CAAE,KAAT,CAAd,EACD,CAFD,IAEO,CACL,MAAKF,KAAL,CAAWY,QAAX,CAAoB,MAAKZ,KAAL,CAAWa,WAA/B,CAA4C,MAAKZ,KAAL,CAAWK,cAAvD,EACA,MAAKD,QAAL,CAAc,CAAEC,cAAc,CAAEK,SAAlB,CAAd,EAA8C;AAC9C,MAAKN,QAAL,CAAc,CAAEH,KAAK,CAAE,aAAT,CAAd,EAAyC;AACzC,MAAKF,KAAL,CAAWc,UAAX,CAAsB,MAAKd,KAAL,CAAWe,WAAX,CAAyB,CAA/C,EACD,CACF,CApBkB,OAsBnBC,MAtBmB,CAsBV,UAAM,CACb,MAAKX,QAAL,CAAc,CAAEC,cAAc,CAAEK,SAAlB,CAAd,EAA8C;AAC9C,MAAKX,KAAL,CAAWc,UAAX,CAAsB,MAAKd,KAAL,CAAWe,WAAX,CAAyB,CAA/C,EACD,CAzBkB,cAElB,C,8CAyBD,iBAAS,iBACP,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,aAAK,SAAS,CAAC,yBAAf,wBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,YAAI,SAAS,CAAC,8BAAd,uBACY,KAAKf,KAAL,CAAWa,WADvB,QACwC,KAAKb,KAAL,CAAWiB,YADnD,GADF,EADF,cAOE,UAAG,SAAS,CAAC,UAAb,UAAyB,KAAKjB,KAAL,CAAWkB,QAApC,EAPF,cAQE,cAAM,SAAS,CAAC,UAAhB,CAA2B,QAAQ,CAAE,KAAKT,UAA1C,WACG,KAAKT,KAAL,CAAWmB,OAAX,CAAmBC,GAAnB,CAAuB,SAAAC,MAAM,qBAC5B,aAAK,SAAS,CAAC,gBAAf,wBACE,cACE,SAAS,CAAC,OADZ,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAEA,MAHT,CAIE,OAAO,CAAE,MAAI,CAACpB,KAAL,CAAWK,cAAX,GAA8Be,MAJzC,CAKE,QAAQ,CAAE,MAAI,CAAClB,aALjB,EADF,cAQE,aAAM,SAAS,CAAC,WAAhB,UAA6BkB,MAA7B,EARF,GAD4B,EAA7B,CADH,cAaE,UAAG,SAAS,CAAE,KAAKpB,KAAL,CAAWC,KAAzB,0CAbF,cAcE,cACE,SAAS,CAAC,iDADZ,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAE,MAHT,EAdF,GARF,cA4BE,eACE,OAAO,CAAE,KAAKc,MADhB,CAEE,SAAS,CACP,KAAKhB,KAAL,CAAWa,WAAX,GAA2B,CAA3B,CACI,aADJ,CAEI,iDALR,kBA5BF,GADF,EADF,CA2CD,C,yBA5EuBf,S,EA+E1B,cAAeC,CAAAA,WAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass MultiChoice extends Component {\n  state = {\n    error: \"displayNone\"\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onValueChange = event => {\n    this.setState({\n      selectedOption: event.target.value\n    });\n  };\n\n  formSubmit = event => {\n    event.preventDefault();\n    if (this.state.selectedOption === undefined) {\n      this.setState({ error: \"red\" });\n    } else {\n      this.props.addState(this.props.questionNum, this.state.selectedOption);\n      this.setState({ selectedOption: undefined }); //otherwise next question may have selectedOption of previous question\n      this.setState({ error: \"displayNone\" }); //so next page doesnt have error message if first page did\n      this.props.changePage(this.props.currentPage + 1);\n    }\n  };\n\n  goBack = () => {\n    this.setState({ selectedOption: undefined }); //if you select option then go back the previous question would have current questions selectedOption\n    this.props.changePage(this.props.currentPage - 1);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"homeBackground white-bg\">\n          <div className=\"questionNumber\">\n            <h1 className=\"questionNumberText appleFont\">\n              Question {this.props.questionNum} of {this.props.numQuestions}\n            </h1>\n          </div>\n\n          <p className=\"marginLR\">{this.props.question}</p>\n          <form className=\"marginLR\" onSubmit={this.formSubmit}>\n            {this.props.options.map(option => (\n              <div className=\"radioContainer\">\n                <input\n                  className=\"check\"\n                  type=\"radio\"\n                  value={option}\n                  checked={this.state.selectedOption === option}\n                  onChange={this.onValueChange}\n                />\n                <span className=\"checkMark\">{option}</span>\n              </div>\n            ))}\n            <p className={this.state.error}>You need to select an option</p>\n            <input\n              className=\"questionnaireButton questionnaireNext appleFont\"\n              type=\"submit\"\n              value={\"Next\"}\n            />\n          </form>\n          <button\n            onClick={this.goBack}\n            className={\n              this.props.questionNum === 1\n                ? \"displayNone\"\n                : \"questionnaireButton questionnaireBack appleFont\"\n            }\n          >\n            Back\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MultiChoice;\n"]},"metadata":{},"sourceType":"module"}