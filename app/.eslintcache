[{"/usr/src/app/src/index.js":"1","/usr/src/app/src/components/App.jsx":"2","/usr/src/app/src/components/Disclaimer.jsx":"3","/usr/src/app/src/components/AutofillPage.jsx":"4","/usr/src/app/src/components/BeginDemo.jsx":"5","/usr/src/app/src/components/HiddenTask.jsx":"6","/usr/src/app/src/components/Messages.jsx":"7","/usr/src/app/src/components/Login.jsx":"8","/usr/src/app/src/components/Explanation.jsx":"9","/usr/src/app/src/components/Home.jsx":"10","/usr/src/app/src/components/BeginMain.jsx":"11","/usr/src/app/src/components/MultiChoice.jsx":"12","/usr/src/app/src/components/autofill.jsx":"13","/usr/src/app/src/components/number.jsx":"14","/usr/src/app/src/components/Complete.jsx":"15","/usr/src/app/src/components/ProlificCode.jsx":"16"},{"size":223,"mtime":1614972839997,"results":"17","hashOfConfig":"18"},{"size":18142,"mtime":1615154708842,"results":"19","hashOfConfig":"18"},{"size":1099,"mtime":1614972839979,"results":"20","hashOfConfig":"18"},{"size":6416,"mtime":1614972839978,"results":"21","hashOfConfig":"18"},{"size":1436,"mtime":1614972839978,"results":"22","hashOfConfig":"18"},{"size":670,"mtime":1614972839979,"results":"23","hashOfConfig":"18"},{"size":1557,"mtime":1614972839979,"results":"24","hashOfConfig":"18"},{"size":1579,"mtime":1614972839979,"results":"25","hashOfConfig":"18"},{"size":1445,"mtime":1614972839979,"results":"26","hashOfConfig":"18"},{"size":1164,"mtime":1614972839979,"results":"27","hashOfConfig":"18"},{"size":1086,"mtime":1614972839978,"results":"28","hashOfConfig":"18"},{"size":2682,"mtime":1614972839979,"results":"29","hashOfConfig":"18"},{"size":2155,"mtime":1615150861248,"results":"30","hashOfConfig":"18"},{"size":406,"mtime":1614972839979,"results":"31","hashOfConfig":"18"},{"size":878,"mtime":1614972839978,"results":"32","hashOfConfig":"18"},{"size":321,"mtime":1614972839979,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m9qiv6",{"filePath":"36","messages":"37","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/src/index.js",[],"/usr/src/app/src/components/App.jsx",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"/usr/src/app/src/components/Disclaimer.jsx",["106"],"import React, { Component } from \"react\";\n\nclass Disclaimer extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"centreText titleDiv\">\n          <h1 className=\"title appleFont centreText\">Disclaimer</h1>\n        </div>\n        <div className=\"widthPadding disclaimerBox\">\n          <p>\n            This experiment was to look into the security related problems\n            regarding the autofill option.\n          </p>\n        </div>\n        <div>\n          <button\n            onClick={() => this.props.changePage(this.props.currentPage + 1)}\n            className=\"questionnaireButton questionnaireNext appleFont disclaimerButton1\"\n          >\n            Next\n          </button>\n          <button\n            onClick={() => this.props.changePage(this.props.currentPage - 1)}\n            className=\"questionnaireButton questionnaireBack appleFont disclaimerButton2\"\n          >\n            Back\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Disclaimer;\n","/usr/src/app/src/components/AutofillPage.jsx",["107","108"],"import React, { Component } from \"react\";\nimport numKeyboard from \"../images/numKeyboard.jpg\";\nimport Number from \"./number\";\nimport Autofill from \"./autofill\";\nimport messageDropdown from \"../images/message.PNG\";\nimport otherMessageDropdown from \"../images/message1.png\";\n\nexport default class AutofillPage extends Component {\n  state = { output: \"\", messageActive: true, keyboardActive: false };\n\n  constructor(props) {\n    super(props);\n    this.props.updateMessageReadStatus();\n  }\n\n  addNum = num => {\n    if (num === parseInt(num)) {\n      if (this.state.output.length < 6) {\n        this.setState({ output: this.state.output + num });\n      }\n    } else {\n      this.backspace();\n    }\n  };\n\n  backspace = () => {\n    if (this.state.output.length !== 0) {\n      this.setState({ output: this.state.output.slice(0, -1) });\n    }\n  };\n\n  addAutofill = response => {\n    this.setState({ output: response });\n    if (this.props.highestPage === this.props.pageNumbers.Autofill) {\n      this.props.addState(\"Autofill Used\", \"yes\");\n    }\n  };\n\n  vertificationCode = () => {\n    if (this.state.output.length === 0) {\n      return (\n        <p className=\"absolute appleFont lightGrey fixPadding\">\n          Vertification code\n        </p>\n      );\n    } else {\n      return (\n        <p className=\"absolute appleFont fixPadding\">{this.state.output}</p>\n      );\n    }\n  };\n\n  checkAutofill = () => {\n    if (\n      this.state.output === \"449585\" &&\n      this.props.highestPage === this.props.pageNumbers.DemoAutofill\n    ) {\n      this.props.changePage(this.props.pageNumbers.HiddenTask);\n    } //change lower autofill code\n    if (\n      this.state.output === \"099819\" &&\n      this.props.highestPage === this.props.pageNumbers.Autofill\n    ) {\n      this.props.changePage(this.props.pageNumbers.WhichWebsite);\n    }\n  };\n\n  openKeyboard = () => {\n    if (!this.state.keyboardActive) {\n      this.setState({ keyboardActive: true });\n    }\n  };\n\n  closeKeyboard = () => {\n    if (this.state.keyboardActive) {\n      this.setState({ keyboardActive: false });\n    }\n  };\n\n  closeMessage = () => {\n    this.setState({ messageActive: false });\n  };\n\n  displayMessage = () => {\n    var classes = \"displayNone\";\n    if (this.props.demoMessageRead) {\n      if (\n        this.props.highestPage === this.props.pageNumbers.Autofill &&\n        !this.props.realMessageRead\n      ) {\n        classes = \"messageButton\";\n      }\n    } else {\n      classes = \"messageButton\";\n    }\n    return (\n      <div className=\"messageSize\">\n        <button\n          className={classes}\n          onClick={() =>\n            this.props.changePage(this.props.pageNumbers.Messages, \"safari\")\n          }\n        >\n          <img\n            className=\"messageDropdown\"\n            src={\n              this.props.highestPage === this.props.pageNumbers.Autofill\n                ? messageDropdown\n                : otherMessageDropdown\n            }\n          />\n        </button>\n      </div>\n    );\n  };\n\n  autofillHelpBox = () => {\n    if (\n      this.state.keyboardActive &&\n      this.props.option !== 3 &&\n      this.props.demo\n    ) {\n      return (\n        <React.Fragment>\n          <div className=\"pointerAutofill\"></div>\n          <div className=\"autofillHelpBox helpBoxText\">\n            <p>\n              Click the code below to automatically fill in the vertification\n              code\n            </p>\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.autofillHelpBox()}\n        {this.displayMessage()}\n        <div className=\"autofillContext\">\n          <h1 className=\"secondaryColour appleFont\">Type in your code</h1>\n        </div>\n        <div className=\"pushItDown keyboardOutput addBorder\">\n          <button\n            onClick={this.openKeyboard}\n            className=\"vertificationCodeButton\"\n          >\n            {this.vertificationCode()}\n          </button>\n        </div>\n        <div className=\"continueButtonDiv\">\n          <button className=\"submitAutofill\" onClick={this.checkAutofill}>\n            <p className=\"autofillContinueText appleFont\">Continue</p>\n          </button>\n        </div>\n        <div\n          className={\n            this.state.keyboardActive\n              ? \"autofillSection\"\n              : \"autofillSection displayNone\"\n          }\n        >\n          <div className=\"closeKeyboard\">\n            <button onClick={this.closeKeyboard} className=\"doneButton\">\n              <p className=\"blue appleFont\">Done</p>\n            </button>\n          </div>\n          <Autofill\n            option={this.props.option}\n            addAutofill={this.addAutofill}\n            highestPage={this.props.highestPage}\n            pageNumbers={this.props.pageNumbers}\n          />\n          <div className=\"overlappingTable\">\n            <table>\n              <tr>\n                <th>\n                  <Number num={1} addNum={this.addNum} />\n                </th>\n                <th>\n                  <Number num={2} addNum={this.addNum} />\n                </th>\n                <th>\n                  <Number num={3} addNum={this.addNum} />\n                </th>\n              </tr>\n              <tr>\n                <th>\n                  <Number num={4} addNum={this.addNum} />\n                </th>\n                <th>\n                  <Number num={5} addNum={this.addNum} />\n                </th>\n                <th>\n                  <Number num={6} addNum={this.addNum} />\n                </th>\n              </tr>\n              <tr>\n                <th>\n                  <Number num={7} addNum={this.addNum} />\n                </th>\n                <th>\n                  <Number num={8} addNum={this.addNum} />\n                </th>\n                <th>\n                  <Number num={9} addNum={this.addNum} />\n                </th>\n              </tr>\n              <tr>\n                <th>\n                  <button className=\"numButton\">x</button>\n                </th>\n                <th>\n                  <Number num={0} addNum={this.addNum} />\n                </th>\n                <th>\n                  <Number num={\"b\"} addNum={this.addNum} />\n                </th>\n              </tr>\n            </table>\n          </div>\n          <div className=\"autofillImage2\">\n            <img className=\"screenWidth\" src={numKeyboard} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","/usr/src/app/src/components/BeginDemo.jsx",["109"],"import React, { Component } from \"react\";\n\nexport default class BeginDemo extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"centreText titleDiv\">\n          <h1 className=\"title appleFont centreText\">Begin The Demo</h1>\n        </div>\n        <div className=\"widthPadding explanationBox\">\n          <p>\n            Before the real experiment begins you will be allowed to use a demo\n            version of the system so that you can understand how to operate the\n            login system on this emulated iPhone.\n          </p>\n          <p>\n            During the demo there will be helper boxes dotted around the page\n            with helpful information regarding how to use specific parts of the\n            webpage. Pay attention to these before you get to the real\n            experiment.\n          </p>\n          <p>\n            This phone is limited in the fact that until you get to the\n            questionnaire at the end you will not be able to use your keyboard.\n            Copy and paste also will not work.\n          </p>\n        </div>\n        <div className=\"explanationNextDiv\">\n          <button\n            onClick={() =>\n              this.props.changePage(this.props.pageNumbers.DemoLogin)\n            }\n          >\n            Next Page\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","/usr/src/app/src/components/HiddenTask.jsx",["110"],"import React, { Component } from \"react\";\nimport blurredPhoto from \"../images/blurredPhoto.png\";\n\nexport default class HiddenTask extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"beginExperimentDiv\">\n          <button\n            className=\"beginExperimentButton\"\n            onClick={() =>\n              this.props.changePage(this.props.pageNumbers.BeginMain)\n            }\n          >\n            Next Page\n          </button>\n        </div>\n        <div className=\"screenWidth fixHeightHome\">\n          <img className=\"homeBackground\" src={blurredPhoto} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","/usr/src/app/src/components/Messages.jsx",["111","112","113","114","115"],"import React, { Component } from \"react\";\nimport message1 from \"../images/messageScreen1.png\";\nimport message2 from \"../images/messageScreen2.png\";\nimport emptyMessage from \"../images/emptyMessages.png\";\nimport safari from \"../images/safari.jpg\";\n\nexport default class Messages extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.messageViewed();\n  }\n\n  showMessage = () => {\n    if (this.props.highestPage === this.props.pageNumbers.DemoAutofill) {\n      return <img className=\"screenWidth pushUp\" src={message1} />;\n    }\n    if (this.props.highestPage == this.props.pageNumbers.Autofill) {\n      return <img className=\"screenWidth pushUp\" src={message2} />;\n    }\n    return (\n      <img\n        className=\"screenWidth emptyMessageHeight pushUp\"\n        src={emptyMessage}\n      />\n    );\n  };\n\n  safariButton = () => {\n    if (this.props.safari) {\n      this.props.updateMessageReadStatusImmediately();\n      return (\n        <div className=\"positionSafari\">\n          <button\n            className=\"safariButton\"\n            onClick={() => this.props.changePage(this.props.highestPage)}\n          >\n            <img className=\"safariImage\" src={safari} />\n          </button>\n        </div>\n      );\n    }\n  };\n\n  messageViewed = () => {\n    if (this.props.highestPage === this.props.pageNumbers.Autofill) {\n      this.props.addState(\"Message Viewed\", \"yes\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"screenWidth\">\n        {this.showMessage()}\n        {this.safariButton()}\n      </div>\n    );\n  }\n}\n","/usr/src/app/src/components/Login.jsx",["116"],"import React, { Component } from \"react\";\n\nclass Login extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  loginHelpBox = () => {\n    if (this.props.demo) {\n      return (\n        <React.Fragment>\n          <div className=\"pointerLogin\"></div>\n          <div className=\"loginHelpBox\">\n            <p className=\"helpBoxText\">\n              The login fields have already been filled, you just need to press\n              log in\n            </p>\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.loginHelpBox()}\n        <div className=\"centreText titleDiv\">\n          <h1 className=\"title appleFont centreText\">Login Page</h1>\n        </div>\n        <div className=\"pushDownLogin\">\n          <div className=\"loginField pushDownLogin\">\n            <p className=\"loginText\">testuser@test.com</p>\n          </div>\n          <div className=\"loginField upperMargin\">\n            <p className=\"loginText\">**********</p>\n          </div>\n          <div className=\"loginButtonDiv\">\n            <button\n              className=\"loginButton\"\n              onClick={() =>\n                this.props.changePage(\n                  this.props.demo\n                    ? this.props.pageNumbers.DemoAutofill\n                    : this.props.pageNumbers.Autofill\n                )\n              }\n            >\n              <p className=\"loginButtonText appleFont\">Log In</p>\n            </button>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","/usr/src/app/src/components/Explanation.jsx",["117"],"import React, { Component } from \"react\";\n\nexport default class Explanation extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"centreText titleDiv\">\n          <h1 className=\"title appleFont centreText\">Explanation Of Task</h1>\n        </div>\n        <div className=\"widthPadding explanationBox\">\n          <p>\n            1) This experiment is to look into the Usablility and Security of\n            the following system.\n          </p>\n          <p>2) The only type of interaction possible is clicking.</p>\n          <p>\n            3) You will begin with the demo, this allows you to explore the\n            system before the main task.\n          </p>\n          <p>\n            4) Don't refresh the page otherwise you will have to redo the\n            experiment in its entirety\n          </p>\n          <p>\n            5) Once you have submitted the questionaire at the end you will be\n            given a academic prolific code. Copy this and enter it in to\n            Prolific Academic to confirm you have completed the task.\n          </p>\n        </div>\n        <div className=\"explanationNextDiv\">\n          <button\n            onClick={() =>\n              this.props.changePage(this.props.pageNumbers.BeginDemo)\n            }\n          >\n            Next Page\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","/usr/src/app/src/components/Home.jsx",["118","119","120","121"],"import React, { Component } from \"react\";\nimport homeBackground from \"../images/homeBackground.png\";\nimport safariIcon from \"../images/safariIcon.png\";\nimport messageIcon from \"../images/messageIcon.png\";\n\nexport default class Home extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(this.props.highestPage);\n    return (\n      <React.Fragment>\n        <div className=\"messageIconDiv\">\n          <button\n            onClick={() =>\n              this.props.changePage(this.props.pageNumbers.Messages)\n            }\n            className=\"hiddenButton\"\n          >\n            <img className=\"messageIcon\" src={messageIcon} />\n          </button>\n        </div>\n        <div className=\"safariIconDiv\">\n          <button\n            onClick={() => this.props.changePage(this.props.highestPage)}\n            className=\"hiddenButton\"\n          >\n            <img className=\"safariIcon\" src={safariIcon} />\n          </button>\n        </div>\n        <div className=\"screenWidth fixHeightHome\">\n          <img className=\"homeBackground\" src={homeBackground} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","/usr/src/app/src/components/BeginMain.jsx",["122"],"import React, { Component } from \"react\";\n\nclass BeginMain extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"centreText titleDiv\">\n          <h1 className=\"title appleFont centreText\">Begin Real Experiment</h1>\n        </div>\n        <div className=\"widthPadding explanationBox\">\n          <p>\n            You have successfully completed the demo, the main task was hidden\n            as we do not want to affect your results in the real experiment.{\" \"}\n          </p>\n          <p>If you want to try the demo again refresh the page now.</p>\n          <p>\n            Once you start the real experiment{\" \"}\n            <span className=\"bold\">DO NOT REFRESH THE PAGE</span>.\n          </p>\n        </div>\n        <div className=\"explanationNextDiv\">\n          <button\n            onClick={() => this.props.changePage(this.props.pageNumbers.Login)}\n          >\n            Next Page\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BeginMain;\n","/usr/src/app/src/components/MultiChoice.jsx",["123"],"import React, { Component } from \"react\";\n\nclass MultiChoice extends Component {\n  state = {\n    error: \"displayNone\"\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onValueChange = event => {\n    this.setState({\n      selectedOption: event.target.value\n    });\n  };\n\n  formSubmit = event => {\n    event.preventDefault();\n    if (this.state.selectedOption === undefined) {\n      this.setState({ error: \"red\" });\n    } else {\n      this.props.addState(this.props.questionNum, this.state.selectedOption);\n      this.setState({ selectedOption: undefined }); //otherwise next question may have selectedOption of previous question\n      this.setState({ error: \"displayNone\" }); //so next page doesnt have error message if first page did\n      this.props.changePage(this.props.currentPage + 1);\n    }\n  };\n\n  goBack = () => {\n    this.setState({ selectedOption: undefined }); //if you select option then go back the previous question would have current questions selectedOption\n    this.props.changePage(this.props.currentPage - 1);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"homeBackground white-bg\">\n          <div className=\"questionNumber\">\n            <h1 className=\"questionNumberText appleFont\">\n              Question {this.props.questionNum} of {this.props.numQuestions}\n            </h1>\n          </div>\n\n          <p className=\"marginLR\">{this.props.question}</p>\n          <form className=\"marginLR\" onSubmit={this.formSubmit}>\n            {this.props.options.map(option => (\n              <div className=\"radioContainer\">\n                <input\n                  className=\"check\"\n                  type=\"checkbox\"\n                  value={option}\n                  checked={this.state.selectedOption === option}\n                  onChange={this.onValueChange}\n                />\n                <span className=\"checkMark\">{option}</span>\n              </div>\n            ))}\n            <p className={this.state.error}>You need to select an option</p>\n            <input\n              className=\"questionnaireButton questionnaireNext appleFont\"\n              type=\"submit\"\n              value={\n                this.props.questionNum === this.props.numQuestions\n                  ? \"Submit\"\n                  : \"Next\"\n              }\n            />\n          </form>\n          <button\n            onClick={this.goBack}\n            className={\n              this.props.questionNum === 1\n                ? \"displayNone\"\n                : \"questionnaireButton questionnaireBack appleFont\"\n            }\n          >\n            Back\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MultiChoice;\n","/usr/src/app/src/components/autofill.jsx",["124","125"],"import React, { Component } from \"react\";\n\nclass Autofill extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderSwitch = () => {\n    var response = \"449585\";\n    var name = \"Google\";\n    if (this.props.highestPage === this.props.pageNumbers.Autofill) {\n      response = \"099819\";\n      name = \"Paypal\";\n    }\n    console.log(this.props.option);\n    switch (this.props.option) {\n      case 1:\n        return (\n          <React.Fragment>\n            {\" \"}\n            <button\n              className=\"appleFont autofillButton\"\n              onClick={() => this.props.addAutofill(response)}\n            >\n              <p className=\"noSpacing reducedFontSize\">From Messages</p>\n              <p className=\"noSpacing\">{response}</p>\n            </button>\n          </React.Fragment>\n        );\n      case 2:\n        return (\n          <React.Fragment>\n            <div class=\"floatLeft leftBox\">\n              {\" \"}\n              <button\n                className=\"appleFont autofillButton\"\n                onClick={() => this.props.addAutofill(response)}\n              >\n                <p className=\"noSpacing reducedFontSize\">From Messages</p>\n                <p className=\"noSpacing\">{response}</p>\n              </button>\n            </div>\n            <div className=\"appleFont autofillButton floatRight rightBox\">\n              <p className=\"noSpacing reducedFontSize\">Keywords:</p>\n              <p className=\"noSpacing\">{name}</p>\n            </div>\n          </React.Fragment>\n        );\n      case 3:\n        return;\n      case 4:\n        return (\n          <React.Fragment>\n            {\" \"}\n            <button\n              className=\"appleFont autofillButton\"\n              onClick={() => this.props.addAutofill(response)}\n            >\n              <p className=\"noSpacing reducedFontSize\">From {name}:</p>\n              <p className=\"noSpacing slightMarginTop\">{response}</p>\n            </button>\n          </React.Fragment>\n        );\n    }\n  };\n\n  render() {\n    return <div className=\"autofillNew\">{this.renderSwitch()}</div>;\n  }\n}\n\nexport default Autofill;\n\n/*grey aboveKeypad text-center autofill*/\n","/usr/src/app/src/components/number.jsx",[],"/usr/src/app/src/components/Complete.jsx",["126"],"import React, { Component } from \"react\";\n\nclass Complete extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  complete = () => {\n    this.props.completeTask();\n    this.props.changePage(this.props.pageNumbers.ProlificCode);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"centreText titleDiv\">\n          <h1 className=\"title appleFont centreText\">Complete Task</h1>\n        </div>\n        <div className=\"widthPadding explanationBox\">\n          <p>\n            Clicking the complete button below will submit all your responses.\n          </p>\n\n          <p>Please do not reattempt the experiment after completion.</p>\n        </div>\n        <div className=\"explanationNextDiv\">\n          <button onClick={this.complete}>Complete</button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Complete;\n","/usr/src/app/src/components/ProlificCode.jsx",[],{"ruleId":"127","severity":1,"message":"128","line":217,"column":11,"nodeType":"129","endLine":217,"endColumn":55},{"ruleId":"130","severity":1,"message":"131","line":233,"column":9,"nodeType":"132","messageId":"133","endLine":233,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":248,"column":9,"nodeType":"132","messageId":"133","endLine":248,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":256,"column":9,"nodeType":"132","messageId":"133","endLine":256,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":264,"column":9,"nodeType":"132","messageId":"133","endLine":264,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":273,"column":9,"nodeType":"132","messageId":"133","endLine":273,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":285,"column":13,"nodeType":"136","endLine":285,"endColumn":39},{"ruleId":"130","severity":1,"message":"131","line":288,"column":9,"nodeType":"132","messageId":"133","endLine":288,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":296,"column":9,"nodeType":"132","messageId":"133","endLine":296,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":304,"column":9,"nodeType":"132","messageId":"133","endLine":304,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":313,"column":9,"nodeType":"132","messageId":"133","endLine":313,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":329,"column":13,"nodeType":"136","endLine":329,"endColumn":39},{"ruleId":"130","severity":1,"message":"131","line":332,"column":9,"nodeType":"132","messageId":"133","endLine":332,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":353,"column":9,"nodeType":"132","messageId":"133","endLine":353,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":362,"column":9,"nodeType":"132","messageId":"133","endLine":362,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":383,"column":9,"nodeType":"132","messageId":"133","endLine":383,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":403,"column":9,"nodeType":"132","messageId":"133","endLine":403,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":423,"column":9,"nodeType":"132","messageId":"133","endLine":423,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":443,"column":9,"nodeType":"132","messageId":"133","endLine":443,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":464,"column":9,"nodeType":"132","messageId":"133","endLine":464,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":484,"column":9,"nodeType":"132","messageId":"133","endLine":484,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":504,"column":9,"nodeType":"132","messageId":"133","endLine":504,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":524,"column":9,"nodeType":"132","messageId":"133","endLine":524,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":544,"column":9,"nodeType":"132","messageId":"133","endLine":544,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":564,"column":9,"nodeType":"132","messageId":"133","endLine":564,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":584,"column":9,"nodeType":"132","messageId":"133","endLine":584,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":598,"column":9,"nodeType":"132","messageId":"133","endLine":598,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":607,"column":9,"nodeType":"132","messageId":"133","endLine":607,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":104,"column":11,"nodeType":"129","endLine":111,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":225,"column":13,"nodeType":"129","endLine":225,"endColumn":62},{"ruleId":"137","severity":1,"message":"138","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":20,"column":11,"nodeType":"129","endLine":20,"endColumn":64},{"ruleId":"127","severity":1,"message":"128","line":17,"column":14,"nodeType":"129","endLine":17,"endColumn":67},{"ruleId":"141","severity":1,"message":"142","line":19,"column":32,"nodeType":"143","messageId":"144","endLine":19,"endColumn":34},{"ruleId":"127","severity":1,"message":"128","line":20,"column":14,"nodeType":"129","endLine":20,"endColumn":67},{"ruleId":"127","severity":1,"message":"128","line":23,"column":7,"nodeType":"129","endLine":26,"endColumn":9},{"ruleId":"127","severity":1,"message":"128","line":39,"column":13,"nodeType":"129","endLine":39,"endColumn":57},{"ruleId":"137","severity":1,"message":"138","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":4},{"ruleId":"137","severity":1,"message":"138","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":4},{"ruleId":"137","severity":1,"message":"138","line":9,"column":3,"nodeType":"139","messageId":"140","endLine":11,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":24,"column":13,"nodeType":"129","endLine":24,"endColumn":62},{"ruleId":"127","severity":1,"message":"128","line":32,"column":13,"nodeType":"129","endLine":32,"endColumn":60},{"ruleId":"127","severity":1,"message":"128","line":36,"column":11,"nodeType":"129","endLine":36,"endColumn":66},{"ruleId":"137","severity":1,"message":"138","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":4},{"ruleId":"137","severity":1,"message":"138","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":10,"endColumn":4},{"ruleId":"137","severity":1,"message":"138","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":4},{"ruleId":"145","severity":1,"message":"146","line":18,"column":5,"nodeType":"147","messageId":"148","endLine":66,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":4},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]